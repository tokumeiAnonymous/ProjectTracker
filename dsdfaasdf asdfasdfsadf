[33mcommit ff600d9d45d55301560410cb1d9300a03cd41e91[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m)[m
Author: Jerome Taguba <jerometagubanoone@gmail.com>
Date:   Fri Nov 19 21:11:30 2021 +0800

    This is my first commit

[1mdiff --git a/ProjectTracker/.gitignore b/ProjectTracker/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..153c933[m
[1m--- /dev/null[m
[1m+++ b/ProjectTracker/.gitignore[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32mHELP.md[m
[32m+[m[32m/target/[m
[32m+[m[32m!.mvn/wrapper/maven-wrapper.jar[m
[32m+[m
[32m+[m[32m### STS ###[m
[32m+[m[32m.apt_generated[m
[32m+[m[32m.classpath[m
[32m+[m[32m.factorypath[m
[32m+[m[32m.project[m
[32m+[m[32m.settings[m
[32m+[m[32m.springBeans[m
[32m+[m[32m.sts4-cache[m
[32m+[m
[32m+[m[32m### IntelliJ IDEA ###[m
[32m+[m[32m.idea[m
[32m+[m[32m*.iws[m
[32m+[m[32m*.iml[m
[32m+[m[32m*.ipr[m
[32m+[m
[32m+[m[32m### NetBeans ###[m
[32m+[m[32m/nbproject/private/[m
[32m+[m[32m/nbbuild/[m
[32m+[m[32m/dist/[m
[32m+[m[32m/nbdist/[m
[32m+[m[32m/.nb-gradle/[m
[32m+[m[32m/build/[m
[32m+[m
[32m+[m[32m### VS Code ###[m
[32m+[m[32m.vscode/[m
[1mdiff --git a/ProjectTracker/.mvn/wrapper/MavenWrapperDownloader.java b/ProjectTracker/.mvn/wrapper/MavenWrapperDownloader.java[m
[1mnew file mode 100644[m
[1mindex 0000000..72308aa[m
[1m--- /dev/null[m
[1m+++ b/ProjectTracker/.mvn/wrapper/MavenWrapperDownloader.java[m
[36m@@ -0,0 +1,114 @@[m
[32m+[m[32m/*[m
[32m+[m[32mLicensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32mor more contributor license agreements.  See the NOTICE file[m
[32m+[m[32mdistributed with this work for additional information[m
[32m+[m[32mregarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32mto you under the Apache License, Version 2.0 (the[m
[32m+[m[32m"License"); you may not use this file except in compliance[m
[32m+[m[32mwith the License.  You may obtain a copy of the License at[m
[32m+[m
[32m+[m[32m  https://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32mUnless required by applicable law or agreed to in writing,[m
[32m+[m[32msoftware distributed under the License is distributed on an[m
[32m+[m[32m"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32mKIND, either express or implied.  See the License for the[m
[32m+[m[32mspecific language governing permissions and limitations[m
[32m+[m[32munder the License.[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32mimport java.io.File;[m
[32m+[m[32mimport java.io.FileInputStream;[m
[32m+[m[32mimport java.io.FileOutputStream;[m
[32m+[m[32mimport java.io.IOException;[m
[32m+[m[32mimport java.net.URL;[m
[32m+[m[32mimport java.nio.channels.Channels;[m
[32m+[m[32mimport java.nio.channels.ReadableByteChannel;[m
[32m+[m[32mimport java.util.Properties;[m
[32m+[m
[32m+[m[32mpublic class MavenWrapperDownloader {[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided.[m
[32m+[m[32m     */[m
[32m+[m[32m    private static final String DEFAULT_DOWNLOAD_URL =[m
[32m+[m[32m            "https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.4.2/maven-wrapper-0.4.2.jar";[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to[m
[32m+[m[32m     * use instead of the default one.[m
[32m+[m[32m     */[m
[32m+[m[32m    private static final String MAVEN_WRAPPER_PROPERTIES_PATH =[m
[32m+[m[32m            ".mvn/wrapper/maven-wrapper.properties";[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Path where the maven-wrapper.jar will be saved to.[m
[32m+[m[32m     */[m
[32m+[m[32m    private static final String MAVEN_WRAPPER_JAR_PATH =[m
[32m+[m[32m            ".mvn/wrapper/maven-wrapper.jar";[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Name of the property which should be used to override the default download url for the wrapper.[m
[32m+[m[32m     */[m
[32m+[m[32m    private static final String PROPERTY_NAME_WRAPPER_URL = "wrapperUrl";[m
[32m+[m
[32m+[m[32m    public static void main(String args[]) {[m
[32m+[m[32m        System.out.println("- Downloader started");[m
[32m+[m[32m        File baseDirectory = new File(args[0]);[m
[32m+[m[32m        System.out.println("- Using base directory: " + baseDirectory.getAbsolutePath());[m
[32m+[m
[32m+[m[32m        // If the maven-wrapper.properties exists, read it and check if it contains a custom[m
[32m+[m[32m        // wrapperUrl parameter.[m
[32m+[m[32m        File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);[m
[32m+[m[32m        String url = DEFAULT_DOWNLOAD_URL;[m
[32m+[m[32m        if(mavenWrapperPropertyFile.exists()) {[m
[32m+[m[32m            FileInputStream mavenWrapperPropertyFileInputStream = null;[m
[32m+[m[32m            try {[m
[32m+[m[32m                mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);[m
[32m+[m[32m                Properties mavenWrapperProperties = new Properties();[m
[32m+[m[32m                mavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);[m
[32m+[m[32m                url = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL, url);[m
[32m+[m[32m            } catch (IOException e) {[m
[32m+[m[32m                System.out.println("- ERROR loading '" + MAVEN_WRAPPER_PROPERTIES_PATH + "'");[m
[32m+[m[32m            } finally {[m
[32m+[m[32m                try {[m
[32m+[m[32m                    if(mavenWrapperPropertyFileInputStream != null) {[m
[32m+[m[32m                        mavenWrapperPropertyFileInputStream.close();[m
[32m+[m[32m                    }[m
[32m+[m[32m                } catch (IOException e) {[m
[32m+[m[32m                    // Ignore ...[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        System.out.println("- Downloading from: : " + url);[m
[32m+[m
[32m+[m[32m        File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);[m
[32m+[m[32m        if(!outputFile.getParentFile().exists()) {[m
[32m+[m[32m            if(!outputFile.getParentFile().mkdirs()) {[m
[32m+[m[32m                System.out.println([m
[32m+[m[32m                        "- ERROR creating output direcrory '" + outputFile.getParentFile().getAbsolutePath() + "'");[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        System.out.println("- Downloading to: " + outputFile.getAbsolutePath());[m
[32m+[m[32m        try {[m
[32m+[m[32m            downloadFileFromURL(url, outputFile);[m
[32m+[m[32m            System.out.println("Done");[m
[32m+[m[32m            System.exit(0);[m
[32m+[m[32m        } catch (Throwable e) {[m
[32m+[m[32m            System.out.println("- Error downloading");[m
[32m+[m[32m            e.printStackTrace();[m
[32m+[m[32m            System.exit(1);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private static void downloadFileFromURL(String urlString, File destination) throws Exception {[m
[32m+[m[32m        URL website = new URL(urlString);[m
[32m+[m[32m        ReadableByteChannel rbc;[m
[32m+[m[32m        rbc = Channels.newChannel(website.openStream());[m
[32m+[m[32m        FileOutputStream fos = new FileOutputStream(destination);[m
[32m+[m[32m        fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);[m
[32m+[m[32m        fos.close();[m
[32m+[m[32m        rbc.close();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/ProjectTracker/.mvn/wrapper/maven-wrapper.jar b/ProjectTracker/.mvn/wrapper/maven-wrapper.jar[m
[1mnew file mode 100644[m
[1mindex 0000000..01e6799[m
Binary files /dev/null and b/ProjectTracker/.mvn/wrapper/maven-wrapper.jar differ
[1mdiff --git a/ProjectTracker/.mvn/wrapper/maven-wrapper.properties b/ProjectTracker/.mvn/wrapper/maven-wrapper.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..cd0d451[m
[1m--- /dev/null[m
[1m+++ b/ProjectTracker/.mvn/wrapper/maven-wrapper.properties[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mdistributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.0/apache-maven-3.6.0-bin.zip[m
[1mdiff --git a/ProjectTracker/mvnw b/ProjectTracker/mvnw[m
[1mnew file mode 100644[m
[1mindex 0000000..8b9da3b[m
[1m--- /dev/null[m
[1m+++ b/ProjectTracker/mvnw[m
[36m@@ -0,0 +1,286 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m[32m# Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m# or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m# distributed with this work for additional information[m
[32m+[m[32m# regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m# to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m# "License"); you may not use this file except in compliance[m
[32m+[m[32m# with the License.  You may obtain a copy of the License at[m
[32m+[m[32m#[m
[32m+[m[32m#    https://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m#[m
[32m+[m[32m# Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m# software distributed under the License is distributed on an[m
[32m+[m[32m# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m# KIND, either express or implied.  See the License for the[m
[32m+[m[32m# specific language governing permissions and limitations[m
[32m+[m[32m# under the License.[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m[32m# Maven2 Start Up Batch script[m
[32m+[m[32m#[m
[32m+[m[32m# Required ENV vars:[m
[32m+[m[32m# ------------------[m
[32m+[m[32m#   JAVA_HOME - location of a JDK home dir[m
[32m+[m[32m#[m
[32m+[m[32m# Optional ENV vars[m
[32m+[m[32m# -----------------[m
[32m+[m[32m#   M2_HOME - location of maven2's installed home dir[m
[32m+[m[32m#   MAVEN_OPTS - parameters passed to the Java VM when running Maven[m
[32m+[m[32m#     e.g. to debug Maven itself, use[m
[32m+[m[32m#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000[m
[32m+[m[32m#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mif [ -z "$MAVEN_SKIP_RC" ] ; then[m
[32m+[m
[32m+[m[32m  if [ -f /etc/mavenrc ] ; then[m
[32m+[m[32m    . /etc/mavenrc[m
[32m+[m[32m  fi[m
[32m+[m
[32m+[m[32m  if [ -f "$HOME/.mavenrc" ] ; then[m
[32m+[m[32m    . "$HOME/.mavenrc"[m
[32m+[m[32m  fi[m
[32m+[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# OS specific support.  $var _must_ be set to either true or false.[m
[32m+[m[32mcygwin=false;[m
[32m+[m[32mdarwin=false;[m
[32m+[m[32mmingw=false[m
[32m+[m[32mcase "`uname`" in[m
[32m+[m[32m  CYGWIN*) cygwin=true ;;[m
[32m+[m[32m  MINGW*) mingw=true;;[m
[32m+[m[32m  Darwin*) darwin=true[m
[32m+[m[32m    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home[m
[32m+[m[32m    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html[m
[32m+[m[32m    if [ -z "$JAVA_HOME" ]; then[m
[32m+[m[32m      if [ -x "/usr/libexec/java_home" ]; then[m
[32m+[m[32m        export JAVA_HOME="`/usr/libexec/java_home`"[m
[32m+[m[32m      else[m
[32m+[m[32m        export JAVA_HOME="/Library/Java/Home"[m
[32m+[m[32m      fi[m
[32m+[m[32m    fi[m
[32m+[m[32m    ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -z "$JAVA_HOME" ] ; then[m
[32m+[m[32m  if [ -r /etc/gentoo-release ] ; then[m
[32m+[m[32m    JAVA_HOME=`java-config --jre-home`[m
[32m+[m[32m  fi[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mif [ -z "$M2_HOME" ] ; then[m
[32m+[m[32m  ## resolve links - $0 may be a link to maven's home[m
[32m+[m[32m  PRG="$0"[m
[32m+[m
[32m+[m[32m  # need this for relative symlinks[m
[32m+[m[32m  while [ -h "$PRG" ] ; do[m
[32m+[m[32m    ls=`ls -ld "$PRG"`[m
[32m+[m[32m    link=`expr "$ls" : '.*-> \(.*\)$'`[m
[32m+[m[32m    if expr "$link" : '/.*' > /dev/null; then[m
[32m+[m[32m      PRG="$link"[m
[32m+[m[32m    else[m
[32m+[m[32m      PRG="`dirname "$PRG"`/$link"[m
[32m+[m[32m    fi[m
[32m+[m[32m  done[m
[32m+[m
[32m+[m[32m  saveddir=`pwd`[m
[32m+[m
[32m+[m[32m  M2_HOME=`dirname "$PRG"`/..[m
[32m+[m
[32m+[m[32m  # make it fully qualified[m
[32m+[m[32m  M2_HOME=`cd "$M2_HOME" && pwd`[m
[32m+[m
[32m+[m[32m  cd "$saveddir"[m
[32m+[m[32m  # echo Using m2 at $M2_HOME[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# For Cygwin, ensure paths are in UNIX format before anything is touched[m
[32m+[m[32mif $cygwin ; then[m
[32m+[m[32m  [ -n "$M2_HOME" ] &&[m
[32m+[m[32m    M2_HOME=`cygpath --unix "$M2_HOME"`[m
[32m+[m[32m  [ -n "$JAVA_HOME" ] &&[m
[32m+[m[32m    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`[m
[32m+[m[32m  [ -n "$CLASSPATH" ] &&[m
[32m+[m[32m    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# For Mingw, ensure paths are in UNIX format before anything is touched[m
[32m+[m[32mif $mingw ; then[m
[32m+[m[32m  [ -n "$M2_HOME" ] &&[m
[32m+[m[32m    M2_HOME="`(cd "$M2_HOME"; pwd)`"[m
[32m+[m[32m  [ -n "$JAVA_HOME" ] &&[m
[32m+[m[32m    JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"[m
[32m+[m[32m  # TODO classpath?[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mif [ -z "$JAVA_HOME" ]; then[m
[32m+[m[32m  javaExecutable="`which javac`"[m
[32m+[m[32m  if [ -n "$javaExecutable" ] && ! [ "`expr \"$javaExecutable\" : '\([^ ]*\)'`" = "no" ]; then[m
[32m+[m[32m    # readlink(1) is not available as standard on Solaris 10.[m
[32m+[m[32m    readLink=`which readlink`[m
[32m+[m[32m    if [ ! `expr "$readLink" : '\([^ ]*\)'` = "no" ]; then[m
[32m+[m[32m      if $darwin ; then[m
[32m+[m[32m        javaHome="`dirname \"$javaExecutable\"`"[m
[32m+[m[32m        javaExecutable="`cd \"$javaHome\" && pwd -P`/javac"[m
[32m+[m[32m      else[m
[32m+[m[32m        javaExecutable="`readlink -f \"$javaExecutable\"`"[m
[32m+[m[32m      fi[m
[32m+[m[32m      javaHome="`dirname \"$javaExecutable\"`"[m
[32m+[m[32m      javaHome=`expr "$javaHome" : '\(.*\)/bin'`[m
[32m+[m[32m      JAVA_HOME="$javaHome"[m
[32m+[m[32m      export JAVA_HOME[m
[32m+[m[32m    fi[m
[32m+[m[32m  fi[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mif [ -z "$JAVACMD" ] ; then[m
[32m+[m[32m  if [ -n "$JAVA_HOME"  ] ; then[m
[32m+[m[32m    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then[m
[32m+[m[32m      # IBM's JDK on AIX uses strange locations for the executables[m
[32m+[m[32m      JAVACMD="$JAVA_HOME/jre/sh/java"[m
[32m+[m[32m    else[m
[32m+[m[32m      JAVACMD="$JAVA_HOME/bin/java"[m
[32m+[m[32m    fi[m
[32m+[m[32m  else[m
[32m+[m[32m    JAVACMD="`which java`"[m
[32m+[m[32m  fi[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mif [ ! -x "$JAVACMD" ] ; then[m
[32m+[m[32m  echo "Error: JAVA_HOME is not defined correctly." >&2[m
[32m+[m[32m  echo "  We cannot execute $JAVACMD" >&2[m
[32m+[m[32m  exit 1[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mif [ -z "$JAVA_HOME" ] ; then[m
[32m+[m[32m  echo "Warning: JAVA_HOME environment variable is not set."[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mCLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher[m
[32m+[m
[32m+[m[32m# traverses directory structure from process work directory to filesystem root[m
[32m+[m[32m# first directory with .mvn subdirectory is considered project base directory[m
[32m+[m[32mfind_maven_basedir() {[m
[32m+[m
[32m+[m[32m  if [ -z "$1" ][m
[32m+[m[32m  then[m
[32m+[m[32m    echo "Path not specified to find_maven_basedir"[m
[32m+[m[32m    return 1[m
[32m+[m[32m  fi[m
[32m+[m
[32m+[m[32m  basedir="$1"[m
[32m+[m[32m  wdir="$1"[m
[32m+[m[32m  while [ "$wdir" != '/' ] ; do[m
[32m+[m[32m    if [ -d "$wdir"/.mvn ] ; then[m
[32m+[m[32m      basedir=$wdir[m
[32m+[m[32m      break[m
[32m+[m[32m    fi[m
[32m+[m[32m    # workaround for JBEAP-8937 (on Solaris 10/Sparc)[m
[32m+[m[32m    if [ -d "${wdir}" ]; then[m
[32m+[m[32m      wdir=`cd "$wdir/.."; pwd`[m
[32m+[m[32m    fi[m
[32m+[m[32m    # end of workaround[m
[32m+[m[32m  done[m
[32m+[m[32m  echo "${basedir}"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# concatenates all lines of a file[m
[32m+[m[32mconcat_lines() {[m
[32m+[m[32m  if [ -f "$1" ]; then[m
[32m+[m[32m    echo "$(tr -s '\n' ' ' < "$1")"[m
[32m+[m[32m  fi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mBASE_DIR=`find_maven_basedir "$(pwd)"`[m
[32m+[m[32mif [ -z "$BASE_DIR" ]; then[m
[32m+[m[32m  exit 1;[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m##########################################################################################[m
[32m+[m[32m# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central[m
[32m+[m[32m# This allows using the maven wrapper in projects that prohibit checking in binary data.[m
[32m+[m[32m##########################################################################################[m
[32m+[m[32mif [ -r "$BASE_DIR/.mvn/wrapper/maven-wrapper.jar" ]; then[m
[32m+[m[32m    if [ "$MVNW_VERBOSE" = true ]; then[m
[32m+[m[32m      echo "Found .mvn/wrapper/maven-wrapper.jar"[m
[32m+[m[32m    fi[m
[32m+[m[32melse[m
[32m+[m[32m    if [ "$MVNW_VERBOSE" = true ]; then[m
[32m+[m[32m      echo "Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ..."[m
[32m+[m[32m    fi[m
[32m+[m[32m    jarUrl="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.4.2/maven-wrapper-0.4.2.jar"[m
[32m+[m[32m    while IFS="=" read key value; do[m
[32m+[m[32m      case "$key" in (wrapperUrl) jarUrl="$value"; break ;;[m
[32m+[m[32m      esac[m
[32m+[m[32m    done < "$BASE_DIR/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m[32m    if [ "$MVNW_VERBOSE" = true ]; then[m
[32m+[m[32m      echo "Downloading from: $jarUrl"[m
[32m+[m[32m    fi[m
[32m+[m[32m    wrapperJarPath="$BASE_DIR/.mvn/wrapper/maven-wrapper.jar"[m
[32m+[m
[32m+[m[32m    if command -v wget > /dev/null; then[m
[32m+[m[32m        if [ "$MVNW_VERBOSE" = true ]; then[m
[32m+[m[32m          echo "Found wget ... using wget"[m
[32m+[m[32m        fi[m
[32m+[m[32m        wget "$jarUrl" -O "$wrapperJarPath"[m
[32m+[m[32m    elif command -v curl > /dev/null; then[m
[32m+[m[32m        if [ "$MVNW_VERBOSE" = true ]; then[m
[32m+[m[32m          echo "Found curl ... using curl"[m
[32m+[m[32m        fi[m
[32m+[m[32m        curl -o "$wrapperJarPath" "$jarUrl"[m
[32m+[m[32m    else[m
[32m+[m[32m        if [ "$MVNW_VERBOSE" = true ]; then[m
[32m+[m[32m          echo "Falling back to using Java to download"[m
[32m+[m[32m        fi[m
[32m+[m[32m        javaClass="$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java"[m
[32m+[m[32m        if [ -e "$javaClass" ]; then[m
[32m+[m[32m            if [ ! -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then[m
[32m+[m[32m                if [ "$MVNW_VERBOSE" = true ]; then[m
[32m+[m[32m                  echo " - Compiling MavenWrapperDownloader.java ..."[m
[32m+[m[32m                fi[m
[32m+[m[32m                # Compiling the Java class[m
[32m+[m[32m                ("$JAVA_HOME/bin/javac" "$javaClass")[m
[32m+[m[32m            fi[m
[32m+[m[32m            if [ -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then[m
[32m+[m[32m                # Running the downloader[m
[32m+[m[32m                if [ "$MVNW_VERBOSE" = true ]; then[m
[32m+[m[32m                  echo " - Running MavenWrapperDownloader.java ..."[m
[32m+[m[32m                fi[m
[32m+[m[32m                ("$JAVA_HOME/bin/java" -cp .mvn/wrapper MavenWrapperDownloader "$MAVEN_PROJECTBASEDIR")[m
[32m+[m[32m            fi[m
[32m+[m[32m        fi[m
[32m+[m[32m    fi[m
[32m+[m[32mfi[m
[32m+[m[32m##########################################################################################[m
[32m+[m[32m# End of extension[m
[32m+[m[32m##########################################################################################[m
[32m+[m
[32m+[m[32mexport MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-"$BASE_DIR"}[m
[32m+[m[32mif [ "$MVNW_VERBOSE" = true ]; then[m
[32m+[m[32m  echo $MAVEN_PROJECTBASEDIR[m
[32m+[m[32mfi[m
[32m+[m[32mMAVEN_OPTS="$(concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config") $MAVEN_OPTS"[m
[32m+[m
[32m+[m[32m# For Cygwin, switch paths to Windows format before running java[m
[32m+[m[32mif $cygwin; then[m
[32m+[m[32m  [ -n "$M2_HOME" ] &&[m
[32m+[m[32m    M2_HOME=`cygpath --path --windows "$M2_HOME"`[m
[32m+[m[32m  [ -n "$JAVA_HOME" ] &&[m
[32m+[m[32m    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`[m
[32m+[m[32m  [ -n "$CLASSPATH" ] &&[m
[32m+[m[32m    CLASSPATH=`cygpath --path --windows "$CLASSPATH"`[m
[32m+[m[32m  [ -n "$MAVEN_PROJECTBASEDIR" ] &&[m
[32m+[m[32m    MAVEN_PROJECTBASEDIR=`cygpath --path --windows "$MAVEN_PROJECTBASEDIR"`[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mWRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain[m
[32m+[m
[32m+[m[32mexec "$JAVACMD" \[m
[32m+[m[32m  $MAVEN_OPTS \[m
[32m+[m[32m  -classpath "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar" \[m
[32m+[m[32m  "-Dmaven.home=${M2_HOME}" "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \[m
[32m+[m[32m  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG "$@"[m
[1mdiff --git a/ProjectTracker/mvnw.cmd b/ProjectTracker/mvnw.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..fef5a8f[m
[1m--- /dev/null[m
[1m+++ b/ProjectTracker/mvnw.cmd[m
[36m@@ -0,0 +1,161 @@[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m[32m@REM Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m@REM or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m@REM distributed with this work for additional information[m
[32m+[m[32m@REM regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m@REM to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m@REM "License"); you may not use this file except in compliance[m
[32m+[m[32m@REM with the License.  You may obtain a copy of the License at[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM    https://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m@REM software distributed under the License is distributed on an[m
[32m+[m[32m@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m@REM KIND, either express or implied.  See the License for the[m
[32m+[m[32m@REM specific language governing permissions and limitations[m
[32m+[m[32m@REM under the License.[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m[32m@REM Maven2 Start Up Batch script[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM Required ENV vars:[m
[32m+[m[32m@REM JAVA_HOME - location of a JDK home dir[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM Optional ENV vars[m
[32m+[m[32m@REM M2_HOME - location of maven2's installed home dir[m
[32m+[m[32m@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands[m
[32m+[m[32m@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a key stroke before ending[m
[32m+[m[32m@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven[m
[32m+[m[32m@REM     e.g. to debug Maven itself, use[m
[32m+[m[32m@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000[m
[32m+[m[32m@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'[m
[32m+[m[32m@echo off[m
[32m+[m[32m@REM set title of command window[m
[32m+[m[32mtitle %0[m
[32m+[m[32m@REM enable echoing my setting MAVEN_BATCH_ECHO to 'on'[m
[32m+[m[32m@if "%MAVEN_BATCH_ECHO%" == "on"  echo %MAVEN_BATCH_ECHO%[m
[32m+[m
[32m+[m[32m@REM set %HOME% to equivalent of $HOME[m
[32m+[m[32mif "%HOME%" == "" (set "HOME=%HOMEDRIVE%%HOMEPATH%")[m
[32m+[m
[32m+[m[32m@REM Execute a user defined script before this one[m
[32m+[m[32mif not "%MAVEN_SKIP_RC%" == "" goto skipRcPre[m
[32m+[m[32m@REM check for pre script, once with legacy .bat ending and once with .cmd ending[m
[32m+[m[32mif exist "%HOME%\mavenrc_pre.bat" call "%HOME%\mavenrc_pre.bat"[m
[32m+[m[32mif exist "%HOME%\mavenrc_pre.cmd" call "%HOME%\mavenrc_pre.cmd"[m
[32m+[m[32m:skipRcPre[m
[32m+[m
[32m+[m[32m@setlocal[m
[32m+[m
[32m+[m[32mset ERROR_CODE=0[m
[32m+[m
[32m+[m[32m@REM To isolate internal variables from possible post scripts, we use another setlocal[m
[32m+[m[32m@setlocal[m
[32m+[m
[32m+[m[32m@REM ==== START VALIDATION ====[m
[32m+[m[32mif not "%JAVA_HOME%" == "" goto OkJHome[m
[32m+[m
[32m+[m[32mecho.[m
[32m+[m[32mecho Error: JAVA_HOME not found in your environment. >&2[m
[32m+[m[32mecho Please set the JAVA_HOME variable in your environment to match the >&2[m
[32m+[m[32mecho location of your Java installation. >&2[m
[32m+[m[32mecho.[m
[32m+[m[32mgoto error[m
[32m+[m
[32m+[m[32m:OkJHome[m
[32m+[m[32mif exist "%JAVA_HOME%\bin\java.exe" goto init[m
[32m+[m
[32m+[m[32mecho.[m
[32m+[m[32mecho Error: JAVA_HOME is set to an invalid directory. >&2[m
[32m+[m[32mecho JAVA_HOME = "%JAVA_HOME%" >&2[m
[32m+[m[32mecho Please set the JAVA_HOME variable in your environment to match the >&2[m
[32m+[m[32mecho location of your Java installation. >&2[m
[32m+[m[32mecho.[m
[32m+[m[32mgoto error[m
[32m+[m
[32m+[m[32m@REM ==== END VALIDATION ====[m
[32m+[m
[32m+[m[32m:init[m
[32m+[m
[32m+[m[32m@REM Find the project base dir, i.e. the directory that contains the folder ".mvn".[m
[32m+[m[32m@REM Fallback to current working directory if not found.[m
[32m+[m
[32m+[m[32mset MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%[m
[32m+[m[32mIF NOT "%MAVEN_PROJECTBASEDIR%"=="" goto endDetectBaseDir[m
[32m+[m
[32m+[m[32mset EXEC_DIR=%CD%[m
[32m+[m[32mset WDIR=%EXEC_DIR%[m
[32m+[m[32m:findBaseDir[m
[32m+[m[32mIF EXIST "%WDIR%"\.mvn goto baseDirFound[m
[32m+[m[32mcd ..[m
[32m+[m[32mIF "%WDIR%"=="%CD%" goto baseDirNotFound[m
[32m+[m[32mset WDIR=%CD%[m
[32m+[m[32mgoto findBaseDir[m
[32m+[m
[32m+[m[32m:baseDirFound[m
[32m+[m[32mset MAVEN_PROJECTBASEDIR=%WDIR%[m
[32m+[m[32mcd "%EXEC_DIR%"[m
[32m+[m[32mgoto endDetectBaseDir[m
[32m+[m
[32m+[m[32m:baseDirNotFound[m
[32m+[m[32mset MAVEN_PROJECTBASEDIR=%EXEC_DIR%[m
[32m+[m[32mcd "%EXEC_DIR%"[m
[32m+[m
[32m+[m[32m:endDetectBaseDir[m
[32m+[m
[32m+[m[32mIF NOT EXIST "%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config" goto endReadAdditionalConfig[m
[32m+[m
[32m+[m[32m@setlocal EnableExtensions EnableDelayedExpansion[m
[32m+[m[32mfor /F "usebackq delims=" %%a in ("%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a[m
[32m+[m[32m@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%[m
[32m+[m
[32m+[m[32m:endReadAdditionalConfig[m
[32m+[m
[32m+[m[32mSET MAVEN_JAVA_EXE="%JAVA_HOME%\bin\java.exe"[m
[32m+[m[32mset WRAPPER_JAR="%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.jar"[m
[32m+[m[32mset WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain[m
[32m+[m
[32m+[m[32mset DOWNLOAD_URL="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.4.2/maven-wrapper-0.4.2.jar"[m
[32m+[m[32mFOR /F "tokens=1,2 delims==" %%A IN (%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.properties) DO ([m
[32m+[m	[32mIF "%%A"=="wrapperUrl" SET DOWNLOAD_URL=%%B[m[41m [m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32m@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central[m
[32m+[m[32m@REM This allows using the maven wrapper in projects that prohibit checking in binary data.[m
[32m+[m[32mif exist %WRAPPER_JAR% ([m
[32m+[m[32m    echo Found %WRAPPER_JAR%[m
[32m+[m[32m) else ([m
[32m+[m[32m    echo Couldn't find %WRAPPER_JAR%, downloading it ...[m
[32m+[m	[32mecho Downloading from: %DOWNLOAD_URL%[m
[32m+[m[32m    powershell -Command "(New-Object Net.WebClient).DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')"[m
[32m+[m[32m    echo Finished downloading %WRAPPER_JAR%[m
[32m+[m[32m)[m
[32m+[m[32m@REM End of extension[m
[32m+[m
[32m+[m[32m%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% "-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*[m
[32m+[m[32mif ERRORLEVEL 1 goto error[m
[32m+[m[32mgoto end[m
[32m+[m
[32m+[m[32m:error[m
[32m+[m[32mset ERROR_CODE=1[m
[32m+[m
[32m+[m[32m:end[m
[32m+[m[32m@endlocal & set ERROR_CODE=%ERROR_CODE%[m
[32m+[m
[32m+[m[32mif not "%MAVEN_SKIP_RC%" == "" goto skipRcPost[m
[32m+[m[32m@REM check for post script, once with legacy .bat ending and once with .cmd ending[m
[32m+[m[32mif exist "%HOME%\mavenrc_post.bat" call "%HOME%\mavenrc_post.bat"[m
[32m+[m[32mif exist "%HOME%\mavenrc_post.cmd" call "%HOME%\mavenrc_post.cmd"[m
[32m+[m[32m:skipRcPost[m
[32m+[m
[32m+[m[32m@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'[m
[32m+[m[32mif "%MAVEN_BATCH_PAUSE%" == "on" pause[m
[32m+[m
[32m+[m[32mif "%MAVEN_TERMINATE_CMD%" == "on" exit %ERROR_CODE%[m
[32m+[m
[32m+[m[32mexit /B %ERROR_CODE%[m
[1mdiff --git a/ProjectTracker/pom.xml b/ProjectTracker/pom.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..8e2ae1b[m
[1m--- /dev/null[m
[1m+++ b/ProjectTracker/pom.xml[m
[36m@@ -0,0 +1,65 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project xmlns="http://maven.apache.org/POM/4.0.0"[m
[32m+[m	[32mxmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[32m+[m	[32mxsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">[m
[32m+[m	[32m<modelVersion>4.0.0</modelVersion>[m
[32m+[m	[32m<parent>[m
[32m+[m		[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m		[32m<artifactId>spring-boot-starter-parent</artifactId>[m
[32m+[m		[32m<version>2.2.5.RELEASE</version>[m
[32m+[m		[32m<relativePath /> <!-- lookup parent from repository -->[m
[32m+[m	[32m</parent>[m
[32m+[m	[32m<groupId>net.jerome.projecttracker</groupId>[m
[32m+[m	[32m<artifactId>ProjectTracker</artifactId>[m
[32m+[m	[32m<version>2.0</version>[m
[32m+[m	[32m<name>ProjectTracker</name>[m
[32m+[m	[32m<description>Simple CRUD and Security web app</description>[m
[32m+[m	[32m<packaging>war</packaging>[m
[32m+[m[41m	[m
[32m+[m	[32m<properties>[m
[32m+[m		[32m<java.version>11</java.version>[m
[32m+[m	[32m</properties>[m
[32m+[m
[32m+[m	[32m<dependencies>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-starter-data-jpa</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-starter-security</artifactId>[m
[32m+[m		[32m</dependency>[m[41m		[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-starter-thymeleaf</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-starter-web</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-devtools</artifactId>[m
[32m+[m		[32m</dependency>[m[41m		[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>mysql</groupId>[m
[32m+[m			[32m<artifactId>mysql-connector-java</artifactId>[m
[32m+[m			[32m<scope>runtime</scope>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.thymeleaf.extras</groupId>[m
[32m+[m			[32m<artifactId>thymeleaf-extras-springsecurity5</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m[41m		[m
[32m+[m	[32m</dependencies>[m
[32m+[m
[32m+[m	[32m<build>[m
[32m+[m		[32m<plugins>[m
[32m+[m			[32m<plugin>[m
[32m+[m				[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m				[32m<artifactId>spring-boot-maven-plugin</artifactId>[m
[32m+[m			[32m</plugin>[m
[32m+[m		[32m</plugins>[m
[32m+[m	[32m</build>[m
[32m+[m
[32m+[m[32m</project>[m
[1mdiff --git a/ProjectTracker/src/main/java/net/jerome/projecttracker/AppController.java b/ProjectTracker/src/main/java/net/jerome/projecttracker/AppController.java[m
[1mnew file mode 100644[m
[1mindex 0000000..6f81c21[m
[1m--- /dev/null[m
[1m+++ b/ProjectTracker/src/main/java/net/jerome/projecttracker/AppController.java[m
[36m@@ -0,0 +1,60 @@[m
[32m+[m[32mpackage net.jerome.projecttracker;[m[41m[m
[32m+[m[41m[m
[32m+[m[32mimport java.util.List;[m[41m[m
[32m+[m[41m[m
[32m+[m[32mimport org.springframework.beans.factory.annotation.Autowired;[m[41m[m
[32m+[m[32mimport org.springframework.stereotype.Controller;[m[41m[m
[32m+[m[32mimport org.springframework.ui.Model;[m[41m[m
[32m+[m[32mimport org.springframework.web.bind.annotation.ModelAttribute;[m[41m[m
[32m+[m[32mimport org.springframework.web.bind.annotation.PathVariable;[m[41m[m
[32m+[m[32mimport org.springframework.web.bind.annotation.RequestMapping;[m[41m[m
[32m+[m[32mimport org.springframework.web.bind.annotation.RequestMethod;[m[41m[m
[32m+[m[32mimport org.springframework.web.servlet.ModelAndView;[m[41m[m
[32m+[m[41m[m
[32m+[m[32m@Controller[m[41m[m
[32m+[m[32mpublic class AppController {[m[41m[m
[32m+[m	[32m@Autowired[m[41m[m
[32m+[m	[32mprivate BugService service;[m[41m[m
[32m+[m[41m	[m
[32m+[m	[32m@RequestMapping("/")[m[41m[m
[32m+[m	[32mpublic String viewHomePage(Model model) {[m[41m[m
[32m+[m		[32mList<Bug> listBugs = service.listAll();[m[41m[m
[32m+[m		[32mmodel.addAttribute("listBugs", listBugs);[m[41m[m
[32m+[m[41m		[m
[32m+[m		[32mreturn "index";[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m	[m
[32m+[m	[32m@RequestMapping("/new")[m[41m[m
[32m+[m	[32mpublic String showNewBugForm(Model model) {[m[41m[m
[32m+[m		[32mBug bug = new Bug();[m[41m[m
[32m+[m		[32mmodel.addAttribute("bug", bug);[m[41m[m
[32m+[m[41m		[m
[32m+[m		[32mreturn "new_bug";[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m	[m
[32m+[m	[32m@RequestMapping(value = "/save", method = RequestMethod.POST)[m[41m[m
[32m+[m	[32mpublic String saveBug(@ModelAttribute("bug") Bug bug) {[m[41m[m
[32m+[m		[32mservice.save(bug);[m[41m[m
[32m+[m[41m		[m
[32m+[m		[32mreturn "redirect:/";[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m	[m
[32m+[m	[32m@RequestMapping("/edit/{id}")[m[41m[m
[32m+[m	[32mpublic ModelAndView showEditBugForm(@PathVariable(name = "id") Long id) {[m[41m[m
[32m+[m		[32mModelAndView mav = new ModelAndView("edit_bug");[m[41m[m
[32m+[m[41m		[m
[32m+[m		[32mBug bug = service.get(id);[m[41m[m
[32m+[m		[32mmav.addObject("bug", bug);[m[41m[m
[32m+[m[41m		[m
[32m+[m		[32mreturn mav;[m[41m[m
[32m+[m	[32m}[m[41m	[m
[32m+[m[41m	[m
[32m+[m	[32m@RequestMapping("/delete/{id}")[m[41m[m
[32m+[m	[32mpublic String deleteBug(@PathVariable(name = "id") Long id) {[m[41m[m
[32m+[m		[32mservice.delete(id);[m[41m[m
[32m+[m[41m		[m
[32m+[m		[32mreturn "redirect:/";[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m	[m
[32m+[m[41m	[m
[32m+[m[32m}[m[41m[m
[1mdiff --git a/ProjectTracker/src/main/java/net/jerome/projecttracker/Bug.java b/ProjectTracker/src/main/java/net/jerome/projecttracker/Bug.java[m
[1mnew file mode 100644[m
[1mindex 0000000..6c8ce48[m
[1m--- /dev/null[m
[1m+++ b/ProjectTracker/src/main/java/net/jerome/projecttracker/Bug.java[m
[36m@@ -0,0 +1,67 @@[m
[32m+[m[32mpackage net.jerome.projecttracker;[m[41m[m
[32m+[m[41m[m
[32m+[m[32mimport javax.persistence.Column;[m[41m[m
[32m+[m[32mimport javax.persistence.Entity;[m[41m[m
[32m+[m[32mimport javax.persistence.GeneratedValue;[m[41m[m
[32m+[m[32mimport javax.persistence.GenerationType;[m[41m[m
[32m+[m[32mimport javax.persistence.Id;[m[41m[m
[32m+[m[32mimport javax.persistence.Table;[m[41m[m
[32m+[m[41m[m
[32m+[m[32m@Entity[m[41m[m
[32m+[m[32m@Table(name = "bugs")[m[41m[m
[32m+[m[32mpublic class Bug {[m[41m[m
[32m+[m	[32mprivate Long id;[m[41m[m
[32m+[m	[32mprivate String name;[m[41m[m
[32m+[m	[32mprivate String priority;[m[41m[m
[32m+[m	[32mprivate String status;[m[41m[m
[32m+[m	[32mprivate String type;[m[41m[m
[32m+[m[41m[m
[32m+[m[41m[m
[32m+[m	[32mprotected Bug() {[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32m@Id[m[41m[m
[32m+[m	[32m@Column(name = "bug_id")[m[41m[m
[32m+[m	[32m@GeneratedValue(strategy = GenerationType.IDENTITY)[m[41m[m
[32m+[m	[32mpublic Long getId() {[m[41m[m
[32m+[m		[32mreturn id;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32mpublic void setId(Long id) {[m[41m[m
[32m+[m		[32mthis.id = id;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32m@Column(name = "bug_desc")[m[41m[m
[32m+[m	[32mpublic String getName() {[m[41m[m
[32m+[m		[32mreturn name;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32mpublic void setName(String name) {[m[41m[m
[32m+[m		[32mthis.name = name;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32mpublic String getPriority() {[m[41m[m
[32m+[m		[32mreturn priority;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32mpublic void setPriority(String priority) {[m[41m[m
[32m+[m		[32mthis.priority = priority;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32mpublic String getStatus() {[m[41m[m
[32m+[m		[32mreturn status;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32mpublic void setStatus(String status) {[m[41m[m
[32m+[m		[32mthis.status = status;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m	[32mpublic String getType() {[m[41m[m
[32m+[m		[32mreturn type;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32mpublic void setType(String type) {[m[41m[m
[32m+[m		[32mthis.type = type;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m[41m[m
[32m+[m[32m}[m[41m[m
[1mdiff --git a/ProjectTracker/src/main/java/net/jerome/projecttracker/BugRepository.java b/ProjectTracker/src/main/java/net/jerome/projecttracker/BugRepository.java[m
[1mnew file mode 100644[m
[1mindex 0000000..2ff6f75[m
[1m--- /dev/null[m
[1m+++ b/ProjectTracker/src/main/java/net/jerome/projecttracker/BugRepository.java[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32mpackage net.jerome.projecttracker;[m[41m[m
[32m+[m[41m[m
[32m+[m[32mimport org.springframework.data.jpa.repository.JpaRepository;[m[41m[m
[32m+[m[41m[m
[32m+[m[32mpublic interface BugRepository extends JpaRepository<Bug, Long> {[m[41m[m
[32m+[m[41m[m
[32m+[m[32m}[m[41m[m
[1mdiff --git a/ProjectTracker/src/main/java/net/jerome/projecttracker/BugService.java b/ProjectTracker/src/main/java/net/jerome/projecttracker/BugService.java[m
[1mnew file mode 100644[m
[1mindex 0000000..1e1b1c3[m
[1m--- /dev/null[m
[1m+++ b/ProjectTracker/src/main/java/net/jerome/projecttracker/BugService.java[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32mpackage net.jerome.projecttracker;[m[41m[m
[32m+[m[41m[m
[32m+[m[32mimport java.util.List;[m[41m[m
[32m+[m[41m[m
[32m+[m[32mimport org.springframework.beans.factory.annotation.Autowired;[m[41m[m
[32m+[m[32mimport org.springframework.stereotype.Service;[m[41m[m
[32m+[m[41m[m
[32m+[m[32m@Service[m[41m[m
[32m+[m[32mpublic class BugService {[m[41m[m
[32m+[m	[32m@Autowired[m[41m[m
[32m+[m	[32mprivate BugRepository repo;[m[41m[m
[32m+[m[41m	[m
[32m+[m	[32mpublic List<Bug> listAll() {[m[41m		[m
[32m+[m		[32mreturn repo.findAll();[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m	[m
[32m+[m	[32mpublic void save(Bug product) {[m[41m[m
[32m+[m		[32mrepo.save(product);[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m	[m
[32m+[m	[32mpublic Bug get(Long id) {[m[41m[m
[32m+[m		[32mreturn repo.findById(id).get();[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m	[m
[32m+[m	[32mpublic void delete(Long id) {[m[41m[m
[32m+[m		[32mrepo.deleteById(id);[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[32m}[m[41m[m
[1mdiff --git a/ProjectTracker/src/main/java/net/jerome/projecttracker/MvcConfig.java b/ProjectTracker/src/main/java/net/jerome/projecttracker/MvcConfig.java[m
[1mnew file mode 100644[m
[1mindex 0000000..403d6ec[m
[1m--- /dev/null[m
[1m+++ b/ProjectTracker/src/main/java/net/jerome/projecttracker/MvcConfig.java[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32mpackage net.jerome.projecttracker;[m[41m[m
[32m+[m[41m[m
[32m+[m[32mimport org.springframework.context.annotation.Configuration;[m[41m[m
[32m+[m[32mimport org.springframework.web.servlet.config.annotation.ViewControllerRegistry;[m[41m[m
[32m+[m[32mimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;[m[41m[m
[32m+[m[41m[m
[32m+[m[32m@Configuration[m[41m[m
[32m+[m[32mpublic class MvcConfig implements WebMvcConfigurer {[m[41m[m
[32m+[m[41m[m
[32m+[m	[32m@Override[m[41m[m
[32m+[m	[32mpublic void addViewControllers(ViewControllerRegistry registry) {[m[41m[m
[32m+[m		[32mregistry.addViewController("/403").setViewName("403");[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m[32m}[m[41m[m
[1mdiff --git a/ProjectTracker/src/main/java/net/jerome/projecttracker/MyUserDetails.java b/ProjectTracker/src/main/java/net/jerome/projecttracker/MyUserDetails.java[m
[1mnew file mode 100644[m
[1mindex 0000000..029ea5f[m
[1m--- /dev/null[m
[1m+++ b/ProjectTracker/src/main/java/net/jerome/projecttracker/MyUserDetails.java[m
[36m@@ -0,0 +1,62 @@[m
[32m+[m[32mpackage net.jerome.projecttracker;[m[41m[m
[32m+[m[41m[m
[32m+[m[32mimport java.util.ArrayList;[m[41m[m
[32m+[m[32mimport java.util.Collection;[m[41m[m
[32m+[m[32mimport java.util.List;[m[41m[m
[32m+[m[32mimport java.util.Set;[m[41m[m
[32m+[m[41m[m
[32m+[m[32mimport org.springframework.security.core.GrantedAuthority;[m[41m[m
[32m+[m[32mimport org.springframework.security.core.authority.SimpleGrantedAuthority;[m[41m[m
[32m+[m[32mimport org.springframework.security.core.userdetails.UserDetails;[m[41m[m
[32m+[m[41m[m
[32m+[m[32mpublic class MyUserDetails implements UserDetails {[m[41m[m
[32m+[m[41m[m
[32m+[m	[32mprivate User user;[m[41m[m
[32m+[m[41m	[m
[32m+[m	[32mpublic MyUserDetails(User user) {[m[41m[m
[32m+[m		[32mthis.user = user;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32m@Override[m[41m[m
[32m+[m	[32mpublic Collection<? extends GrantedAuthority> getAuthorities() {[m[41m[m
[32m+[m		[32mSet<Role> roles = user.getRoles();[m[41m[m
[32m+[m		[32mList<SimpleGrantedAuthority> authorities = new ArrayList<>();[m[41m[m
[32m+[m[41m		[m
[32m+[m		[32mfor (Role role : roles) {[m[41m[m
[32m+[m			[32mauthorities.add(new SimpleGrantedAuthority(role.getName()));[m[41m[m
[32m+[m		[32m}[m[41m[m
[32m+[m[41m		[m
[32m+[m		[32mreturn authorities;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32m@Override[m[41m[m
[32m+[m	[32mpublic String getPassword() {[m[41m[m
[32m+[m		[32mreturn user.getPassword();[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32m@Override[m[41m[m
[32m+[m	[32mpublic String getUsername() {[m[41m[m
[32m+[m		[32mreturn user.getUsername();[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32m@Override[m[41m[m
[32m+[m	[32mpublic boolean isAccountNonExpired() {[m[41m[m
[32m+[m		[32mreturn true;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32m@Override[m[41m[m
[32m+[m	[32mpublic boolean isAccountNonLocked() {[m[41m[m
[32m+[m		[32mreturn true;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32m@Override[m[41m[m
[32m+[m	[32mpublic boolean isCredentialsNonExpired() {[m[41m[m
[32m+[m		[32mreturn true;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32m@Override[m[41m[m
[32m+[m	[32mpublic boolean isEnabled() {[m[41m[m
[32m+[m		[32mreturn user.isEnabled();[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m[32m}[m[41m[m
[1mdiff --git a/ProjectTracker/src/main/java/net/jerome/projecttracker/ProjectTrackerApplication.java b/ProjectTracker/src/main/java/net/jerome/projecttracker/ProjectTrackerApplication.java[m
[1mnew file mode 100644[m
[1mindex 0000000..77a76f2[m
[1m--- /dev/null[m
[1m+++ b/ProjectTracker/src/main/java/net/jerome/projecttracker/ProjectTrackerApplication.java[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32mpackage net.jerome.projecttracker;[m
[32m+[m
[32m+[m[32mimport org.springframework.boot.SpringApplication;[m
[32m+[m[32mimport org.springframework.boot.autoconfigure.SpringBootApplication;[m
[32m+[m[32mimport org.springframework.boot.web.servlet.support.SpringBootServletInitializer;[m
[32m+[m
[32m+[m[32m@SpringBootApplication[m
[32m+[m[32mpublic class ProjectTrackerApplication extends SpringBootServletInitializer {[m
[32m+[m
[32m+[m	[32mpublic static void main(String[] args) {[m
[32m+[m		[32mSpringApplication.run(ProjectTrackerApplication.class, args);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/ProjectTracker/src/main/java/net/jerome/projecttracker/Role.java b/ProjectTracker/src/main/java/net/jerome/projecttracker/Role.java[m
[1mnew file mode 100644[m
[1mindex 0000000..4cc3848[m
[1m--- /dev/null[m
[1m+++ b/ProjectTracker/src/main/java/net/jerome/projecttracker/Role.java[m
[36m@@ -0,0 +1,33 @@[m
[32m+[m[32mpackage net.jerome.projecttracker;[m[41m[m
[32m+[m[41m[m
[32m+[m[32mimport javax.persistence.Column;[m[41m[m
[32m+[m[32mimport javax.persistence.Entity;[m[41m[m
[32m+[m[32mimport javax.persistence.GeneratedValue;[m[41m[m
[32m+[m[32mimport javax.persistence.GenerationType;[m[41m[m
[32m+[m[32mimport javax.persistence.Id;[m[41m[m
[32m+[m[32mimport javax.persistence.Table;[m[41m[m
[32m+[m[41m[m
[32m+[m[32m@Entity[m[41m[m
[32m+[m[32m@Table(name = "roles")[m[41m[m
[32m+[m[32mpublic class Role {[m[41m[m
[32m+[m	[32m@Id[m[41m[m
[32m+[m	[32m@Column(name = "role_id")[m[41m[m
[32m+[m	[32m@GeneratedValue(strategy = GenerationType.IDENTITY)[m[41m[m
[32m+[m	[32mprivate Integer id;[m[41m[m
[32m+[m[41m	[m
[32m+[m	[32mprivate String name;[m[41m[m
[32m+[m	[32mpublic Integer getId() {[m[41m[m
[32m+[m		[32mreturn id;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m	[32mpublic void setId(Integer id) {[m[41m[m
[32m+[m		[32mthis.id = id;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m	[32mpublic String getName() {[m[41m[m
[32m+[m		[32mreturn name;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m	[32mpublic void setName(String name) {[m[41m[m
[32m+[m		[32mthis.name = name;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m	[m
[32m+[m[41m	[m
[32m+[m[32m}[m[41m[m
[1mdiff --git a/ProjectTracker/src/main/java/net/jerome/projecttracker/User.java b/ProjectTracker/src/main/java/net/jerome/projecttracker/User.java[m
[1mnew file mode 100644[m
[1mindex 0000000..93de21c[m
[1m--- /dev/null[m
[1m+++ b/ProjectTracker/src/main/java/net/jerome/projecttracker/User.java[m
[36m@@ -0,0 +1,78 @@[m
[32m+[m[32mpackage net.jerome.projecttracker;[m[41m[m
[32m+[m[41m[m
[32m+[m[32mimport java.util.HashSet;[m[41m[m
[32m+[m[32mimport java.util.Set;[m[41m[m
[32m+[m[41m[m
[32m+[m[32mimport javax.persistence.CascadeType;[m[41m[m
[32m+[m[32mimport javax.persistence.Column;[m[41m[m
[32m+[m[32mimport javax.persistence.Entity;[m[41m[m
[32m+[m[32mimport javax.persistence.FetchType;[m[41m[m
[32m+[m[32mimport javax.persistence.GeneratedValue;[m[41m[m
[32m+[m[32mimport javax.persistence.GenerationType;[m[41m[m
[32m+[m[32mimport javax.persistence.Id;[m[41m[m
[32m+[m[32mimport javax.persistence.JoinColumn;[m[41m[m
[32m+[m[32mimport javax.persistence.JoinTable;[m[41m[m
[32m+[m[32mimport javax.persistence.ManyToMany;[m[41m[m
[32m+[m[32mimport javax.persistence.Table;[m[41m[m
[32m+[m[41m[m
[32m+[m[32m@Entity[m[41m[m
[32m+[m[32m@Table(name = "users")[m[41m[m
[32m+[m[32mpublic class User {[m[41m[m
[32m+[m[41m[m
[32m+[m	[32m@Id[m[41m[m
[32m+[m	[32m@Column(name = "user_id")[m[41m[m
[32m+[m	[32m@GeneratedValue(strategy = GenerationType.IDENTITY)[m[41m[m
[32m+[m	[32mprivate Long id;[m[41m[m
[32m+[m[41m[m
[32m+[m	[32mprivate String username;[m[41m[m
[32m+[m	[32mprivate String password;[m[41m[m
[32m+[m	[32mprivate boolean enabled;[m[41m[m
[32m+[m[41m	[m
[32m+[m	[32m@ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER)[m[41m[m
[32m+[m	[32m@JoinTable([m[41m[m
[32m+[m			[32mname = "users_roles",[m[41m[m
[32m+[m			[32mjoinColumns = @JoinColumn(name = "user_id"),[m[41m[m
[32m+[m			[32minverseJoinColumns = @JoinColumn(name = "role_id")[m[41m[m
[32m+[m			[32m)[m[41m[m
[32m+[m	[32mprivate Set<Role> roles = new HashSet<>();[m[41m [m
[32m+[m[41m[m
[32m+[m	[32mpublic Long getId() {[m[41m[m
[32m+[m		[32mreturn id;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32mpublic void setId(Long id) {[m[41m[m
[32m+[m		[32mthis.id = id;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32mpublic String getUsername() {[m[41m[m
[32m+[m		[32mreturn username;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32mpublic void setUsername(String username) {[m[41m[m
[32m+[m		[32mthis.username = username;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32mpublic String getPassword() {[m[41m[m
[32m+[m		[32mreturn password;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32mpublic void setPassword(String password) {[m[41m[m
[32m+[m		[32mthis.password = password;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32mpublic boolean isEnabled() {[m[41m[m
[32m+[m		[32mreturn enabled;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32mpublic void setEnabled(boolean enabled) {[m[41m[m
[32m+[m		[32mthis.enabled = enabled;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32mpublic Set<Role> getRoles() {[m[41m[m
[32m+[m		[32mreturn roles;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32mpublic void setRoles(Set<Role> roles) {[m[41m[m
[32m+[m		[32mthis.roles = roles;[m[41m[m
[32m+[m	[32m}[m[41m	[m
[32m+[m[32m}[m[41m[m
[1mdiff --git a/ProjectTracker/src/main/java/net/jerome/projecttracker/UserDetailsServiceImpl.java b/ProjectTracker/src/main/java/net/jerome/projecttracker/UserDetailsServiceImpl.java[m
[1mnew file mode 100644[m
[1mindex 0000000..18ed8e9[m
[1m--- /dev/null[m
[1m+++ b/ProjectTracker/src/main/java/net/jerome/projecttracker/UserDetailsServiceImpl.java[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32mpackage net.jerome.projecttracker;[m[41m[m
[32m+[m[41m[m
[32m+[m[32mimport org.springframework.beans.factory.annotation.Autowired;[m[41m[m
[32m+[m[32mimport org.springframework.security.core.userdetails.UserDetails;[m[41m[m
[32m+[m[32mimport org.springframework.security.core.userdetails.UserDetailsService;[m[41m[m
[32m+[m[32mimport org.springframework.security.core.userdetails.UsernameNotFoundException;[m[41m[m
[32m+[m[41m[m
[32m+[m[32mpublic class UserDetailsServiceImpl implements UserDetailsService {[m[41m[m
[32m+[m[41m[m
[32m+[m	[32m@Autowired[m[41m[m
[32m+[m	[32mprivate UserRepository userRepository;[m[41m[m
[32m+[m[41m	[m
[32m+[m	[32m@Override[m[41m[m
[32m+[m	[32mpublic UserDetails loadUserByUsername(String username)[m[41m [m
[32m+[m			[32mthrows UsernameNotFoundException {[m[41m[m
[32m+[m		[32mUser user = userRepository.getUserByUsername(username);[m[41m[m
[32m+[m[41m		[m
[32m+[m		[32mif (user == null) {[m[41m[m
[32m+[m			[32mthrow new UsernameNotFoundException("Could not find user");[m[41m[m
[32m+[m		[32m}[m[41m[m
[32m+[m[41m		[m
[32m+[m		[32mreturn new MyUserDetails(user);[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m[32m}[m[41m[m
[1mdiff --git a/ProjectTracker/src/main/java/net/jerome/projecttracker/UserRepository.java b/ProjectTracker/src/main/java/net/jerome/projecttracker/UserRepository.java[m
[1mnew file mode 100644[m
[1mindex 0000000..204f43d[m
[1m--- /dev/null[m
[1m+++ b/ProjectTracker/src/main/java/net/jerome/projecttracker/UserRepository.java[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mpackage net.jerome.projecttracker;[m[41m[m
[32m+[m[41m[m
[32m+[m[32mimport org.springframework.data.jpa.repository.Query;[m[41m[m
[32m+[m[32mimport org.springframework.data.repository.CrudRepository;[m[41m[m
[32m+[m[32mimport org.springframework.data.repository.query.Param;[m[41m[m
[32m+[m[41m[m
[32m+[m[32mpublic interface UserRepository extends CrudRepository<User, Long> {[m[41m[m
[32m+[m[41m[m
[32m+[m	[32m@Query("SELECT u FROM User u WHERE u.username = :username")[m[41m[m
[32m+[m	[32mpublic User getUserByUsername(@Param("username") String username);[m[41m[m
[32m+[m[32m}[m[41m[m
[1mdiff --git a/ProjectTracker/src/main/java/net/jerome/projecttracker/WebSecurityConfig.java b/ProjectTracker/src/main/java/net/jerome/projecttracker/WebSecurityConfig.java[m
[1mnew file mode 100644[m
[1mindex 0000000..c0b4759[m
[1m--- /dev/null[m
[1m+++ b/ProjectTracker/src/main/java/net/jerome/projecttracker/WebSecurityConfig.java[m
[36m@@ -0,0 +1,57 @@[m
[32m+[m[32mpackage net.jerome.projecttracker;[m[41m[m
[32m+[m[41m[m
[32m+[m[32mimport org.springframework.context.annotation.Bean;[m[41m[m
[32m+[m[32mimport org.springframework.context.annotation.Configuration;[m[41m[m
[32m+[m[32mimport org.springframework.security.authentication.dao.DaoAuthenticationProvider;[m[41m[m
[32m+[m[32mimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;[m[41m[m
[32m+[m[32mimport org.springframework.security.config.annotation.web.builders.HttpSecurity;[m[41m[m
[32m+[m[32mimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;[m[41m[m
[32m+[m[32mimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;[m[41m[m
[32m+[m[32mimport org.springframework.security.core.userdetails.UserDetailsService;[m[41m[m
[32m+[m[32mimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;[m[41m[m
[32m+[m[41m[m
[32m+[m[32m@Configuration[m[41m[m
[32m+[m[32m@EnableWebSecurity[m[41m[m
[32m+[m[32mpublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {[m[41m[m
[32m+[m[41m[m
[32m+[m	[32m@Bean[m[41m[m
[32m+[m	[32mpublic UserDetailsService userDetailsService() {[m[41m[m
[32m+[m		[32mreturn new UserDetailsServiceImpl();[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m	[m
[32m+[m	[32m@Bean[m[41m[m
[32m+[m	[32mpublic BCryptPasswordEncoder passwordEncoder() {[m[41m[m
[32m+[m		[32mreturn new BCryptPasswordEncoder();[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m	[m
[32m+[m	[32m@Bean[m[41m[m
[32m+[m	[32mpublic DaoAuthenticationProvider authenticationProvider() {[m[41m[m
[32m+[m		[32mDaoAuthenticationProvider authProvider = new DaoAuthenticationProvider();[m[41m[m
[32m+[m		[32mauthProvider.setUserDetailsService(userDetailsService());[m[41m[m
[32m+[m		[32mauthProvider.setPasswordEncoder(passwordEncoder());[m[41m[m
[32m+[m[41m		[m
[32m+[m		[32mreturn authProvider;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32m@Override[m[41m[m
[32m+[m	[32mprotected void configure(AuthenticationManagerBuilder auth) throws Exception {[m[41m[m
[32m+[m		[32mauth.authenticationProvider(authenticationProvider());[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m	[32m@Override[m[41m[m
[32m+[m	[32mprotected void configure(HttpSecurity http) throws Exception {[m[41m[m
[32m+[m		[32mhttp.authorizeRequests()[m[41m[m
[32m+[m			[32m.antMatchers("/").hasAnyAuthority("Admin", "Tester", "Developer", "User")[m[41m[m
[32m+[m			[32m.antMatchers("/new").hasAnyAuthority("Admin", "Tester")[m[41m[m
[32m+[m			[32m.antMatchers("/edit/**").hasAnyAuthority("Admin","Tester", "Developer")[m[41m[m
[32m+[m			[32m.antMatchers("/delete/**").hasAuthority("Admin")[m[41m[m
[32m+[m			[32m.anyRequest().authenticated()[m[41m[m
[32m+[m			[32m.and()[m[41m[m
[32m+[m			[32m.formLogin().permitAll()[m[41m[m
[32m+[m			[32m.and()[m[41m[m
[32m+[m			[32m.logout().permitAll()[m[41m[m
[32m+[m			[32m.and()[m[41m[m
[32m+[m			[32m.exceptionHandling().accessDeniedPage("/403")[m[41m[m
[32m+[m			[32m;[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[32m}[m[41m[m
[1mdiff --git a/ProjectTracker/src/main/resources/application.properties b/ProjectTracker/src/main/resources/application.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..534fb0a[m
[1m--- /dev/null[m
[1m+++ b/ProjectTracker/src/main/resources/application.properties[m
[36m@@ -0,0 +1,5 @@[m
[32m+[m[32mspring.jpa.hibernate.ddl-auto=none[m
[32m+[m[32mspring.datasource.url=jdbc:mysql://localhost:3306/projecttrackerdb[m
[32m+[m[32mspring.datasource.username=jerome[m
[32m+[m[32mspring.datasource.password=laborabor[m
[32m+[m[32m#logging.level.root=WARN[m
\ No newline at end of file[m
[1mdiff --git a/ProjectTracker/src/main/resources/templates/403.html b/ProjectTracker/src/main/resources/templates/403.html[m
[1mnew file mode 100644[m
[1mindex 0000000..c88c4a2[m
[1m--- /dev/null[m
[1m+++ b/ProjectTracker/src/main/resources/templates/403.html[m
[36m@@ -0,0 +1,10 @@[m
[32m+[m[32m<!DOCTYPE html>[m[41m[m
[32m+[m[32m<html>[m[41m[m
[32m+[m[32m<head>[m[41m[m
[32m+[m[32m<meta charset="ISO-8859-1">[m[41m[m
[32m+[m[32m<title>Access Denied</title>[m[41m[m
[32m+[m[32m</head>[m[41m[m
[32m+[m[32m<body>[m[41m[m
[32m+[m	[32m<h2>Sorry, you don't have permission!</h2>[m[41m[m
[32m+[m[32m</body>[m[41m[m
[32m+[m[32m</html>[m
\ No newline at end of file[m
[1mdiff --git a/ProjectTracker/src/main/resources/templates/edit_bug.html b/ProjectTracker/src/main/resources/templates/edit_bug.html[m
[1mnew file mode 100644[m
[1mindex 0000000..5f8d7f6[m
[1m--- /dev/null[m
[1m+++ b/ProjectTracker/src/main/resources/templates/edit_bug.html[m
[36m@@ -0,0 +1,40 @@[m
[32m+[m[32m<!DOCTYPE html>[m[41m[m
[32m+[m[32m<html xmlns:th="http://www.thymeleaf.org">[m[41m[m
[32m+[m[32m<head>[m[41m[m
[32m+[m[32m<meta charset="ISO-8859-1">[m[41m[m
[32m+[m[32m<title>Edit Bug</title>[m[41m[m
[32m+[m[32m</head>[m[41m[m
[32m+[m[32m<body>[m[41m[m
[32m+[m	[32m<div align="center">[m[41m[m
[32m+[m		[32m<h1>Edit Bug</h1>[m[41m[m
[32m+[m		[32m<br/>[m[41m[m
[32m+[m		[32m<form action="#" th:action="@{/save}" th:object="${bug}" method="post">[m[41m[m
[32m+[m			[32m<table border="0" cellpadding="10">[m[41m[m
[32m+[m				[32m<tr>[m[41m[m
[32m+[m					[32m<td>Bug ID:</td>[m[41m[m
[32m+[m					[32m<td><input type="text" th:field="*{id}" readonly="readonly" /></td>[m[41m[m
[32m+[m				[32m</tr>[m[41m			[m
[32m+[m				[32m<tr>[m[41m[m
[32m+[m					[32m<td>Bug Description:</td>[m[41m[m
[32m+[m					[32m<td><input type="text" th:field="*{name}" /></td>[m[41m[m
[32m+[m				[32m</tr>[m[41m[m
[32m+[m				[32m<tr>[m[41m[m
[32m+[m					[32m<td>Priority:</td>[m[41m[m
[32m+[m					[32m<td><input type="text" th:field="*{priority}" /></td>[m[41m[m
[32m+[m				[32m</tr>[m[41m				[m
[32m+[m				[32m<tr>[m[41m[m
[32m+[m					[32m<td>Status:</td>[m[41m[m
[32m+[m					[32m<td><input type="text" th:field="*{status}" /></td>[m[41m[m
[32m+[m				[32m</tr>[m[41m	[m
[32m+[m				[32m<tr>[m[41m[m
[32m+[m					[32m<td>Type:</td>[m[41m[m
[32m+[m					[32m<td><input type="text" th:field="*{type}" /></td>[m[41m[m
[32m+[m				[32m</tr>[m[41m							[m
[32m+[m				[32m<tr>[m[41m[m
[32m+[m					[32m<td colspan="2"><button type="submit">Save</button></td>[m[41m[m
[32m+[m				[32m</tr>[m[41m[m
[32m+[m			[32m</table>[m[41m[m
[32m+[m		[32m</form>[m[41m[m
[32m+[m	[32m</div>[m[41m[m
[32m+[m[32m</body>[m[41m[m
[32m+[m[32m</html>[m
\ No newline at end of file[m
[1mdiff --git a/ProjectTracker/src/main/resources/templates/index.html b/ProjectTracker/src/main/resources/templates/index.html[m
[1mnew file mode 100644[m
[1mindex 0000000..a31747c[m
[1m--- /dev/null[m
[1m+++ b/ProjectTracker/src/main/resources/templates/index.html[m
[36m@@ -0,0 +1,56 @@[m
[32m+[m[32m<!DOCTYPE html>[m[41m[m
[32m+[m[32m<html xmlns:th="http://www.thymeleaf.org"[m[41m[m
[32m+[m	[32mxmlns:sec="https://www.thymeleaf.org/thymeleaf-extras-springsecurity5">[m[41m[m
[32m+[m[32m<head>[m[41m[m
[32m+[m[32m<meta charset="ISO-8859-1">[m[41m[m
[32m+[m[32m<title>Bug Tracker</title>[m[41m[m
[32m+[m[32m</head>[m[41m[m
[32m+[m[32m<body>[m[41m[m
[32m+[m[32m<div align="center">[m[41m	[m
[32m+[m	[32m<div sec:authorize="isAuthenticated()">[m[41m[m
[32m+[m		[32mWelcome <b><span sec:authentication="name">Username</span></b>[m[41m[m
[32m+[m		[32m&nbsp;[m[41m[m
[32m+[m		[32m<i><span sec:authentication="principal.authorities">Roles</span></i>[m[41m[m
[32m+[m	[32m</div>[m[41m[m
[32m+[m[41m		[m
[32m+[m	[32m<form th:action="@{/logout}" method="post">[m[41m[m
[32m+[m		[32m<input type="submit" value="Logout" />[m[41m[m
[32m+[m	[32m</form>[m[41m[m
[32m+[m[41m	[m
[32m+[m	[32m<h1>Bug Tracker</h1>[m[41m[m
[32m+[m	[32m<div sec:authorize="hasAnyAuthority('Admin', 'Tester')">[m[41m[m
[32m+[m		[32m<a href="new">Create New Bug</a>[m[41m[m
[32m+[m	[32m</div>[m[41m[m
[32m+[m[41m	[m
[32m+[m	[32m<br/><br/>[m[41m[m
[32m+[m	[32m<table border="1" cellpadding="10">[m[41m[m
[32m+[m		[32m<thead>[m[41m[m
[32m+[m			[32m<tr>[m[41m[m
[32m+[m				[32m<th>Bug ID</th>[m[41m[m
[32m+[m				[32m<th>Description</th>[m[41m[m
[32m+[m				[32m<th>Priority</th>[m[41m[m
[32m+[m				[32m<th>Status</th>[m[41m[m
[32m+[m				[32m<th>Type</th>[m[41m[m
[32m+[m[41m				[m
[32m+[m				[32m<th sec:authorize="hasAnyAuthority('Admin', 'Tester', 'Developer', 'User')">Actions</th>[m[41m				[m
[32m+[m[41m				[m
[32m+[m			[32m</tr>[m[41m[m
[32m+[m		[32m</thead>[m[41m[m
[32m+[m		[32m<tbody>[m[41m[m
[32m+[m			[32m<tr th:each="bug : ${listBugs}">[m[41m[m
[32m+[m				[32m<td th:text="${bug.id}">Bug ID</td>[m[41m[m
[32m+[m				[32m<td th:text="${bug.name}">Description</td>[m[41m[m
[32m+[m				[32m<td th:text="${bug.priority}">Priority</td>[m[41m[m
[32m+[m				[32m<td th:text="${bug.status}">Status</td>[m[41m[m
[32m+[m				[32m<td th:text="${bug.type}">Type</td>[m[41m				[m
[32m+[m				[32m<td sec:authorize="hasAnyAuthority('Admin', 'Tester', 'Developer')">[m[41m[m
[32m+[m					[32m<a th:href="@{'/edit/' + ${bug.id}}">Edit</a>[m[41m			[m
[32m+[m					[32m&nbsp;&nbsp;&nbsp;&nbsp;[m[41m[m
[32m+[m					[32m<a sec:authorize="hasAuthority('Admin')" th:href="@{'/delete/' + ${bug.id}}">Delete</a>[m[41m[m
[32m+[m				[32m</td>[m[41m[m
[32m+[m			[32m</tr>[m[41m[m
[32m+[m		[32m</tbody>[m[41m[m
[32m+[m	[32m</table>[m[41m[m
[32m+[m[32m</div>[m[41m[m
[32m+[m[32m</body>[m[41m[m
[32m+[m[32m</html>[m
\ No newline at end of file[m
[1mdiff --git a/ProjectTracker/src/main/resources/templates/new_bug.html b/ProjectTracker/src/main/resources/templates/new_bug.html[m
[1mnew file mode 100644[m
[1mindex 0000000..e13f02f[m
[1m--- /dev/null[m
[1m+++ b/ProjectTracker/src/main/resources/templates/new_bug.html[m
[36m@@ -0,0 +1,36 @@[m
[32m+[m[32m<!DOCTYPE html>[m[41m[m
[32m+[m[32m<html xmlns:th="http://www.thymeleaf.org">[m[41m[m
[32m+[m[32m<head>[m[41m[m
[32m+[m[32m<meta charset="ISO-8859-1">[m[41m[m
[32m+[m[32m<title>Create New Bug</title>[m[41m[m
[32m+[m[32m</head>[m[41m[m
[32m+[m[32m<body>[m[41m[m
[32m+[m	[32m<div align="center">[m[41m	[m
[32m+[m		[32m<h1>Create New Bug</h1>[m[41m[m
[32m+[m		[32m<br/>[m[41m[m
[32m+[m		[32m<form action="#" th:action="@{/save}" th:object="${bug}" method="post">[m[41m[m
[32m+[m			[32m<table border="0" cellpadding="10">[m[41m[m
[32m+[m				[32m<tr>[m[41m[m
[32m+[m					[32m<td>Bug Name:</td>[m[41m[m
[32m+[m					[32m<td><input type="text" th:field="*{name}" /></td>[m[41m[m
[32m+[m				[32m</tr>[m[41m[m
[32m+[m				[32m<tr>[m[41m[m
[32m+[m					[32m<td>Priority:</td>[m[41m[m
[32m+[m					[32m<td><input type="text" th:field="*{priority}" /></td>[m[41m[m
[32m+[m				[32m</tr>[m[41m				[m
[32m+[m				[32m<tr>[m[41m[m
[32m+[m					[32m<td>Status:</td>[m[41m[m
[32m+[m					[32m<td><input type="text" th:field="*{status}" /></td>[m[41m[m
[32m+[m				[32m</tr>[m[41m[m
[32m+[m				[32m<tr>[m[41m[m
[32m+[m					[32m<td>Type:</td>[m[41m[m
[32m+[m					[32m<td><input type="text" th:field="*{type}" /></td>[m[41m[m
[32m+[m				[32m</tr>[m[41m								[m
[32m+[m				[32m<tr>[m[41m[m
[32m+[m					[32m<td colspan="2"><button type="submit">Save</button></td>[m[41m[m
[32m+[m				[32m</tr>[m[41m[m
[32m+[m			[32m</table>[m[41m[m
[32m+[m		[32m</form>[m[41m[m
[32m+[m	[32m</div>[m[41m[m
[32m+[m[32m</body>[m[41m[m
[32m+[m[32m</html>[m
\ No newline at end of file[m
[1mdiff --git a/ProjectTracker/src/test/java/net/codejava/PasswordGenerator.java b/ProjectTracker/src/test/java/net/codejava/PasswordGenerator.java[m
[1mnew file mode 100644[m
[1mindex 0000000..fd15746[m
[1m--- /dev/null[m
[1m+++ b/ProjectTracker/src/test/java/net/codejava/PasswordGenerator.java[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32mpackage net.codejava;[m[41m[m
[32m+[m[41m[m
[32m+[m[32mimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;[m[41m[m
[32m+[m[41m[m
[32m+[m[32mpublic class PasswordGenerator {[m[41m[m
[32m+[m[41m[m
[32m+[m	[32mpublic static void main(String[] args) {[m[41m[m
[32m+[m		[32mBCryptPasswordEncoder encoder = new BCryptPasswordEncoder();[m[41m[m
[32m+[m		[32mString rawPassword = "admin";[m[41m[m
[32m+[m		[32mString encodedPassword = encoder.encode(rawPassword);[m[41m[m
[32m+[m[41m		[m
[32m+[m		[32mSystem.out.println(encodedPassword);[m[41m[m
[32m+[m	[32m}[m[41m[m
[32m+[m[41m[m
[32m+[m[32m}[m[41m[m
